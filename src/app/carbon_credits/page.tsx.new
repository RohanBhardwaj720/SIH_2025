"use client";
import { useRouter } from "next/navigation";
import { useState } from "react";
import { useSession } from "next-auth/react";
import Link from "next/link";
import { 
  Leaf, 
  Award, 
  BarChart2, 
  ArrowRight, 
  Upload, 
  Check, 
  HelpCircle,
  TrendingUp,
  Droplet,
  Sun,
  Home,
  MapPin
} from "lucide-react";
import { Footer } from "@/components/Footer";
import { Card } from "@/components/ui/card";
import { 
  Popover,
  PopoverContent,
  PopoverTrigger,
} from '@/components/ui/popover';

interface CarbonFormData {
  farmId: string;
  cropType: string;
  duration: string;
  location: string;
  water: string;
  area: string;
  manure: string;
  manureQty: string;
  fertilizer: string;
  fertilizerQty: string;
}

interface FarmCarbonData {
  id: string;
  name: string;
  location: string;
  cropType: string;
  area: string;
  credits: number;
  carbonOffset: number;
  lastUpdated: string;
  practices: string[];
}

const CarbonCreditSummary = () => {
  // Mock farms with carbon credits
  const farmCredits: FarmCarbonData[] = [
    {
      id: "farm1",
      name: "North Farm",
      location: "Punjab",
      cropType: "Wheat",
      area: "15 acres",
      credits: 95,
      carbonOffset: 3.8,
      lastUpdated: "5 days ago",
      practices: ["No-till farming", "Cover cropping", "Precision agriculture"]
    },
    {
      id: "farm2",
      name: "South Field",
      location: "Haryana",
      cropType: "Rice",
      area: "12 acres",
      credits: 72,
      carbonOffset: 2.9,
      lastUpdated: "2 weeks ago",
      practices: ["Water conservation", "Organic fertilizers"]
    },
    {
      id: "farm3",
      name: "East Plantation",
      location: "Uttar Pradesh",
      cropType: "Mixed vegetables",
      area: "8 acres",
      credits: 43,
      carbonOffset: 1.7,
      lastUpdated: "1 month ago",
      practices: ["Agroforestry", "Crop rotation"]
    },
    {
      id: "farm4",
      name: "West Orchard",
      location: "Himachal Pradesh",
      cropType: "Apples",
      area: "6 acres",
      credits: 25,
      carbonOffset: 1.0,
      lastUpdated: "3 months ago",
      practices: ["Sustainable irrigation", "Reduced pesticide use"]
    }
  ];

  // Calculate totals
  const totalCredits = farmCredits.reduce((sum, farm) => sum + farm.credits, 0);
  const totalOffset = farmCredits.reduce((sum, farm) => sum + farm.carbonOffset, 0);

  // Mock transaction history
  const transactions = [
    { id: 1, type: "Earned", amount: 45, date: "Aug 15, 2023", farm: "North Farm", practice: "No-till farming" },
    { id: 2, type: "Earned", amount: 30, date: "Jul 28, 2023", farm: "South Field", practice: "Water conservation" },
    { id: 3, type: "Earned", amount: 25, date: "Jul 10, 2023", farm: "East Plantation", practice: "Agroforestry" },
    { id: 4, type: "Earned", amount: 20, date: "Jun 22, 2023", farm: "North Farm", practice: "Cover cropping" },
    { id: 5, type: "Earned", amount: 15, date: "Jun 5, 2023", farm: "West Orchard", practice: "Sustainable irrigation" }
  ];

  return (
    <div className="bg-white dark:bg-gray-900 rounded-lg p-6 shadow-sm">
      <div className="flex flex-col md:flex-row justify-between items-start mb-6">
        <div>
          <h2 className="text-2xl font-bold mb-2">Carbon Credits Summary</h2>
          <p className="text-gray-600 dark:text-gray-400">
            Your accumulated carbon credits from sustainable farming practices
          </p>
        </div>
        
        <div className="mt-4 md:mt-0 flex items-center gap-2">
          <button className="text-sm bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md transition-colors">
            Download Report
          </button>
          <Popover>
            <PopoverTrigger asChild>
              <button className="text-sm border border-gray-300 dark:border-gray-600 hover:bg-gray-100 dark:hover:bg-gray-800 px-3 py-2 rounded-md transition-colors">
                <HelpCircle className="h-4 w-4" />
              </button>
            </PopoverTrigger>
            <PopoverContent className="w-80">
              <div className="space-y-2">
                <h3 className="font-medium">About Carbon Credits</h3>
                <p className="text-sm text-gray-500 dark:text-gray-400">
                  Carbon credits represent the reduction or removal of greenhouse gases from the atmosphere. Each credit equals one ton of carbon dioxide equivalent.
                </p>
                <p className="text-sm text-gray-500 dark:text-gray-400">
                  By implementing sustainable farming practices, you earn credits that can be converted to monetary incentives through government schemes and sustainability programs.
                </p>
              </div>
            </PopoverContent>
          </Popover>
        </div>
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
        <Card className="p-5 border-l-4 border-l-green-500">
          <div className="flex justify-between items-start">
            <div>
              <p className="text-sm text-gray-500 dark:text-gray-400">Total Carbon Credits</p>
              <p className="text-3xl font-bold">{totalCredits}</p>
            </div>
            <div className="bg-green-100 dark:bg-green-900/30 p-3 rounded-full">
              <Award className="h-6 w-6 text-green-600 dark:text-green-400" />
            </div>
          </div>
          <div className="mt-2">
            <span className="text-xs text-green-600 dark:text-green-400 flex items-center">
              <TrendingUp className="h-3 w-3 mr-1" />
              +15% from last month
            </span>
          </div>
        </Card>
        
        <Card className="p-5 border-l-4 border-l-blue-500">
          <div className="flex justify-between items-start">
            <div>
              <p className="text-sm text-gray-500 dark:text-gray-400">Carbon Offset</p>
              <p className="text-3xl font-bold">{totalOffset.toFixed(1)} <span className="text-lg">tons</span></p>
            </div>
            <div className="bg-blue-100 dark:bg-blue-900/30 p-3 rounded-full">
              <Leaf className="h-6 w-6 text-blue-600 dark:text-blue-400" />
            </div>
          </div>
          <div className="mt-2">
            <span className="text-xs text-blue-600 dark:text-blue-400">
              Equivalent to planting ~{Math.round(totalOffset * 45)} trees
            </span>
          </div>
        </Card>
        
        <Card className="p-5 border-l-4 border-l-purple-500">
          <div className="flex justify-between items-start">
            <div>
              <p className="text-sm text-gray-500 dark:text-gray-400">Estimated Value</p>
              <p className="text-3xl font-bold">₹{(totalCredits * 900).toLocaleString()}</p>
            </div>
            <div className="bg-purple-100 dark:bg-purple-900/30 p-3 rounded-full">
              <BarChart2 className="h-6 w-6 text-purple-600 dark:text-purple-400" />
            </div>
          </div>
          <div className="mt-2">
            <span className="text-xs text-purple-600 dark:text-purple-400">
              At current market rate (₹900/credit)
            </span>
          </div>
        </Card>
      </div>
      
      <h3 className="text-xl font-bold mb-4">Credits by Farm</h3>
      <div className="space-y-4 mb-8">
        {farmCredits.map(farm => (
          <Card key={farm.id} className="p-4 hover:shadow-md transition-shadow">
            <div className="flex flex-col md:flex-row md:items-center justify-between">
              <div className="flex items-start space-x-3">
                <div className="bg-green-100 dark:bg-green-900/30 p-2 rounded-full">
                  <Home className="h-6 w-6 text-green-600 dark:text-green-400" />
                </div>
                <div>
                  <h4 className="font-medium">{farm.name}</h4>
                  <div className="flex items-center text-sm text-gray-500 dark:text-gray-400">
                    <MapPin className="h-3 w-3 mr-1" />
                    <span>{farm.location}</span>
                  </div>
                </div>
              </div>
              
              <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mt-3 md:mt-0">
                <div>
                  <p className="text-xs text-gray-500 dark:text-gray-400">Crop</p>
                  <p className="font-medium">{farm.cropType}</p>
                </div>
                <div>
                  <p className="text-xs text-gray-500 dark:text-gray-400">Area</p>
                  <p className="font-medium">{farm.area}</p>
                </div>
                <div>
                  <p className="text-xs text-gray-500 dark:text-gray-400">Carbon Credits</p>
                  <p className="font-medium text-green-600 dark:text-green-400">{farm.credits}</p>
                </div>
                <div>
                  <p className="text-xs text-gray-500 dark:text-gray-400">Carbon Offset</p>
                  <p className="font-medium">{farm.carbonOffset} tons</p>
                </div>
              </div>
              
              <Link 
                href={`/farms/${farm.id}`}
                className="mt-3 md:mt-0 text-sm text-green-600 hover:text-green-700 dark:text-green-400 dark:hover:text-green-300 flex items-center"
              >
                View Details
                <ArrowRight className="h-4 w-4 ml-1" />
              </Link>
            </div>
            
            <div className="mt-3 flex flex-wrap gap-2">
              {farm.practices.map((practice, idx) => (
                <span 
                  key={idx} 
                  className="text-xs bg-green-50 dark:bg-green-900/20 text-green-700 dark:text-green-300 px-2 py-1 rounded-full"
                >
                  {practice}
                </span>
              ))}
            </div>
          </Card>
        ))}
      </div>
      
      <h3 className="text-xl font-bold mb-4">Recent Credit Transactions</h3>
      <Card className="overflow-hidden">
        <div className="overflow-x-auto">
          <table className="w-full">
            <thead className="bg-gray-50 dark:bg-gray-800">
              <tr>
                <th className="px-4 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-400">Type</th>
                <th className="px-4 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-400">Amount</th>
                <th className="px-4 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-400">Date</th>
                <th className="px-4 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-400">Farm</th>
                <th className="px-4 py-3 text-left text-sm font-medium text-gray-500 dark:text-gray-400">Practice</th>
              </tr>
            </thead>
            <tbody className="divide-y divide-gray-200 dark:divide-gray-700">
              {transactions.map(transaction => (
                <tr key={transaction.id} className="hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors">
                  <td className="px-4 py-3 text-sm">
                    <span className={`inline-flex items-center ${
                      transaction.type === "Earned" ? "text-green-600 dark:text-green-400" : "text-blue-600 dark:text-blue-400"
                    }`}>
                      {transaction.type === "Earned" ? (
                        <Upload className="h-4 w-4 mr-1 rotate-180" />
                      ) : (
                        <Upload className="h-4 w-4 mr-1" />
                      )}
                      {transaction.type}
                    </span>
                  </td>
                  <td className="px-4 py-3 text-sm font-medium">
                    {transaction.amount} credits
                  </td>
                  <td className="px-4 py-3 text-sm text-gray-500 dark:text-gray-400">
                    {transaction.date}
                  </td>
                  <td className="px-4 py-3 text-sm">
                    {transaction.farm}
                  </td>
                  <td className="px-4 py-3 text-sm">
                    {transaction.practice}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </Card>
    </div>
  );
};

// Carbon Calculator component
const CarbonCalculator = () => {
  const [form, setForm] = useState<CarbonFormData>({
    farmId: "",
    cropType: "",
    duration: "",
    location: "",
    water: "",
    area: "",
    manure: "",
    manureQty: "",
    fertilizer: "",
    fertilizerQty: "",
  });
  
  const [result, setResult] = useState<{
    credits: number;
    carbonOffset: number;
    value: number;
  } | null>(null);

  // Mock farms
  const farms = [
    { id: "farm1", name: "North Farm" },
    { id: "farm2", name: "South Field" },
    { id: "farm3", name: "East Plantation" },
    { id: "farm4", name: "West Orchard" },
  ];

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setForm(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // Mock calculation
    const baseCredits = parseInt(form.area) * 1.5;
    const waterFactor = form.water === "rainwater" ? 1.2 : 1.0;
    const manureFactor = form.manure === "organic" ? 1.3 : 1.0;
    const fertilizerFactor = form.fertilizer === "organic" ? 1.4 : 1.0;
    
    const totalCredits = Math.round(baseCredits * waterFactor * manureFactor * fertilizerFactor);
    
    setResult({
      credits: totalCredits,
      carbonOffset: totalCredits * 0.04,
      value: totalCredits * 900 // ₹900 per credit
    });
  };

  return (
    <div className="bg-white dark:bg-gray-900 rounded-lg p-6 shadow-sm">
      <div className="mb-6">
        <h2 className="text-2xl font-bold mb-2">Carbon Credit Calculator</h2>
        <p className="text-gray-600 dark:text-gray-400">
          Estimate potential carbon credits based on your farming practices
        </p>
      </div>
      
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="md:col-span-2">
          <form onSubmit={handleSubmit} className="space-y-4">
            <div className="space-y-3">
              <label className="block text-sm font-medium">Select Farm</label>
              <select 
                name="farmId" 
                value={form.farmId} 
                onChange={handleChange}
                className="w-full p-3 border border-gray-300 dark:border-gray-700 rounded-lg bg-white dark:bg-gray-800 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                required
              >
                <option value="">-- Select a farm --</option>
                {farms.map(farm => (
                  <option key={farm.id} value={farm.id}>{farm.name}</option>
                ))}
              </select>
            </div>
            
            <div className="space-y-3">
              <div className="flex items-center justify-between">
                <label className="block text-sm font-medium">Crop Details</label>
                <Popover>
                  <PopoverTrigger>
                    <button type="button" className="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200">
                      <HelpCircle className="h-4 w-4" />
                    </button>
                  </PopoverTrigger>
                  <PopoverContent className="w-80 p-4">
                    <h3 className="font-medium mb-2">About Crop Details</h3>
                    <p className="text-sm text-gray-600 dark:text-gray-300">
                      Different crops have varying carbon sequestration rates. Perennial crops typically sequester more carbon than annual crops.
                    </p>
                  </PopoverContent>
                </Popover>
              </div>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <select
                  name="cropType"
                  value={form.cropType}
                  onChange={handleChange}
                  className="w-full border border-gray-300 dark:border-gray-700 p-3 rounded-lg bg-white dark:bg-gray-800 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                  required
                >
                  <option value="">Select Crop Type</option>
                  <option value="wheat">Wheat</option>
                  <option value="rice">Rice</option>
                  <option value="corn">Corn</option>
                  <option value="vegetables">Vegetables</option>
                  <option value="fruits">Fruits</option>
                </select>
                <input
                  type="number"
                  name="area"
                  placeholder="Area (Acres)"
                  value={form.area}
                  onChange={handleChange}
                  className="w-full border border-gray-300 dark:border-gray-700 p-3 rounded-lg bg-white dark:bg-gray-800 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                  required
                />
              </div>
            </div>

            <div className="space-y-3">
              <div className="flex items-center justify-between">
                <label className="block text-sm font-medium">Resource Usage</label>
                <Popover>
                  <PopoverTrigger>
                    <button type="button" className="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200">
                      <HelpCircle className="h-4 w-4" />
                    </button>
                  </PopoverTrigger>
                  <PopoverContent className="w-80 p-4">
                    <h3 className="font-medium mb-2">About Resource Usage</h3>
                    <p className="text-sm text-gray-600 dark:text-gray-300">
                      Efficient water usage and organic fertilizers contribute to lower carbon emissions and higher carbon credit potential.
                    </p>
                  </PopoverContent>
                </Popover>
              </div>
              
              <select
                name="water"
                value={form.water}
                onChange={handleChange}
                className="w-full border border-gray-300 dark:border-gray-700 p-3 rounded-lg bg-white dark:bg-gray-800 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                required
              >
                <option value="">Select Water Source</option>
                <option value="rainwater">Rainwater harvesting</option>
                <option value="groundwater">Groundwater</option>
                <option value="canal">Canal irrigation</option>
                <option value="mixed">Mixed sources</option>
              </select>

              <div className="grid grid-cols-2 gap-3 mt-3">
                <div>
                  <label className="block text-sm font-medium mb-1">Using Organic Manure?</label>
                  <div className="flex space-x-4">
                    <label className="inline-flex items-center">
                      <input 
                        type="radio" 
                        name="manure" 
                        value="organic" 
                        checked={form.manure === "organic"} 
                        onChange={handleChange} 
                        className="mr-2"
                      />
                      Yes
                    </label>
                    <label className="inline-flex items-center">
                      <input 
                        type="radio" 
                        name="manure" 
                        value="no" 
                        checked={form.manure === "no"} 
                        onChange={handleChange} 
                        className="mr-2"
                      />
                      No
                    </label>
                  </div>
                </div>
                
                <div>
                  <label className="block text-sm font-medium mb-1">Fertilizer Type</label>
                  <select
                    name="fertilizer"
                    value={form.fertilizer}
                    onChange={handleChange}
                    className="w-full border border-gray-300 dark:border-gray-700 p-3 rounded-lg bg-white dark:bg-gray-800 focus:ring-2 focus:ring-green-500 focus:border-transparent"
                  >
                    <option value="">Select type</option>
                    <option value="organic">Organic</option>
                    <option value="chemical">Chemical</option>
                    <option value="mixed">Mixed</option>
                    <option value="none">None</option>
                  </select>
                </div>
              </div>
            </div>

            <div className="space-y-3">
              <label className="block text-sm font-medium">Sustainable Practices (Select all that apply)</label>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                <div className="flex items-center space-x-2">
                  <input type="checkbox" id="organicFarming" className="h-4 w-4 text-green-600 focus:ring-green-500" />
                  <label htmlFor="organicFarming" className="text-sm">Organic Farming</label>
                </div>
                <div className="flex items-center space-x-2">
                  <input type="checkbox" id="coverCropping" className="h-4 w-4 text-green-600 focus:ring-green-500" />
                  <label htmlFor="coverCropping" className="text-sm">Cover Cropping</label>
                </div>
                <div className="flex items-center space-x-2">
                  <input type="checkbox" id="reducedTillage" className="h-4 w-4 text-green-600 focus:ring-green-500" />
                  <label htmlFor="reducedTillage" className="text-sm">Reduced Tillage</label>
                </div>
                <div className="flex items-center space-x-2">
                  <input type="checkbox" id="agroforestry" className="h-4 w-4 text-green-600 focus:ring-green-500" />
                  <label htmlFor="agroforestry" className="text-sm">Agroforestry</label>
                </div>
              </div>
            </div>

            <button
              type="submit"
              className="w-full mt-6 bg-green-600 hover:bg-green-700 text-white py-3 rounded-lg font-semibold transition-colors flex items-center justify-center gap-2"
            >
              <Leaf className="h-5 w-5" />
              Calculate Carbon Credits
            </button>
          </form>
        </div>
        
        <div>
          <Card className="p-5 h-full flex flex-col">
            {result ? (
              <>
                <h3 className="text-lg font-bold mb-4">Estimated Results</h3>
                <div className="space-y-4 flex-grow">
                  <div>
                    <p className="text-sm text-gray-500 dark:text-gray-400">Potential Carbon Credits</p>
                    <p className="text-3xl font-bold text-green-600 dark:text-green-400">{result.credits}</p>
                  </div>
                  
                  <div>
                    <p className="text-sm text-gray-500 dark:text-gray-400">Carbon Offset</p>
                    <p className="text-xl font-medium">{result.carbonOffset.toFixed(1)} tons</p>
                  </div>
                  
                  <div>
                    <p className="text-sm text-gray-500 dark:text-gray-400">Estimated Value</p>
                    <p className="text-xl font-medium">₹{result.value.toLocaleString()}</p>
                  </div>
                </div>
                
                <div className="mt-auto pt-4 border-t border-gray-200 dark:border-gray-700">
                  <p className="text-sm text-gray-500 dark:text-gray-400">
                    These are estimated values based on current rates and may vary depending on actual verification.
                  </p>
                </div>
              </>
            ) : (
              <div className="flex flex-col items-center justify-center h-full text-center">
                <Leaf className="h-16 w-16 text-green-200 dark:text-green-900 mb-4" />
                <h3 className="text-lg font-medium mb-2">Carbon Credit Estimate</h3>
                <p className="text-sm text-gray-500 dark:text-gray-400">
                  Fill out the form to estimate potential carbon credits from your farming practices.
                </p>
              </div>
            )}
          </Card>
        </div>
      </div>
    </div>
  );
};

const CarbonCreditsPage = () => {
  const { data: session, status } = useSession();
  const router = useRouter();
  const [activeTab, setActiveTab] = useState('summary');

  if (status === "loading") {
    return <div className="min-h-screen flex items-center justify-center">Loading...</div>;
  }

  if (status === "unauthenticated") {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <h1 className="text-2xl font-bold mb-4">Please log in</h1>
          <p className="text-gray-500 dark:text-gray-400 mb-6">You need to be logged in to view carbon credits</p>
          <Link href="/login">
            <button className="px-6 py-3 bg-green-600 hover:bg-green-700 text-white rounded-lg font-medium transition-colors">
              Log In
            </button>
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-black">
      <div className="container mx-auto px-4 py-8">
        <div className="flex justify-between items-center mb-6">
          <h1 className="text-2xl font-bold">Carbon Credits</h1>
          <div className="flex space-x-2">
            <button 
              onClick={() => setActiveTab('summary')}
              className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${
                activeTab === 'summary' 
                  ? 'bg-green-600 text-white' 
                  : 'bg-gray-200 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-700'
              }`}
            >
              Credits Summary
            </button>
            <button 
              onClick={() => setActiveTab('calculator')}
              className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${
                activeTab === 'calculator' 
                  ? 'bg-green-600 text-white' 
                  : 'bg-gray-200 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-300 dark:hover:bg-gray-700'
              }`}
            >
              Carbon Calculator
            </button>
          </div>
        </div>
        
        {activeTab === 'summary' ? (
          <CarbonCreditSummary />
        ) : (
          <CarbonCalculator />
        )}
      </div>
      <Footer />
    </div>
  );
};

export default CarbonCreditsPage;
